@implements IDisposable
@namespace Blazor.Database.Components

<div class="container m-2 px-3 p-t bg-info text-white">
    <div class="row">
        <div class="col-12">
            <h3>@this.Title</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-2">Number</div>
        <div class="col-2">@this.displayValue</div>
        <div class="col-2"><button class="btn btn-secondary" @onclick="(e) => NewRandomNumber()">New Number</button></div>
    </div>
    <div class="row bg-dark mt-2">
        <div class="col-3">
            Initialized:
        </div>
        <div class="col-1">
            @this.InitRun
        </div>
        <div class="col-3">
            Params Set:
        </div>
        <div class="col-1">
            @this.ParamsSetRun
        </div>
        <div class="col-3">
            Rendered:
        </div>
        <div class="col-1">
            @this.Rendered
        </div>
    </div>
</div>

@code {
    [Inject] private RandomNumberService RdmService { get; set; }

    [Parameter] public bool WireEvent { get; set; }

    [Parameter] public string Title { get; set; }

    [Parameter] public int Value { get; set; } = 0;

    private int displayValue => this.Value > 0 ? this.Value : RdmService.Value;

    protected override Task OnInitializedAsync()
    {
        this.InitRun++;
        if (this.WireEvent)
            this.RdmService.NumberChanged += this.OnNumberChange;

        return base.OnInitializedAsync();
    }

    private void NewRandomNumber()
    => RdmService.NewNumber();

    private async void OnNumberChange(object sender, EventArgs e)
        => await this.InvokeAsync(StateHasChanged);

    private int InitRun = 0;
    private int ParamsSetRun = 0;
    private int Rendered = 1;

    protected override Task OnParametersSetAsync()
    {
        this.ParamsSetRun++;
        return base.OnParametersSetAsync();
    }

    protected override bool ShouldRender()
    {
        Rendered++;
        return true;
    }

    public void Dispose()
    {
        if (this.WireEvent)
            this.RdmService.NumberChanged -= this.OnNumberChange;
    }
}
