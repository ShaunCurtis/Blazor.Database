@page "/asyncdemo"
<h3>Async Demo Page</h3>

<div class="container-fluid">
    <div class="row mt-2">
        <div class="col-2">
            <h4 class="@stepCss">@stepName</h4>
        </div>
        <div class="col-10 text-right">
            <button class="btn btn-primary ml-1" @onclick="Clear">Clear</button>
            <button class="btn btn-dark ml-1" @onclick="DoVoid">Void</button>
            <button class="btn btn-danger ml-1" @onclick="DoVoidAsync">Void Async</button>
            <button class="btn btn-success ml-1" @onclick="DoTaskAsync">Task</button>
            <button class="btn btn-success ml-1" @onclick="(e) => DoTaskAsync(e)">Task Lambda</button>
            <AsyncButton Clicked="DoTaskAsync">Control DoTaskAsync</AsyncButton>
            <AsyncButton Clicked="DoVoidAsync">Control DoVoidAsync</AsyncButton>
        </div>
    </div>
</div>

@code {

    private string stepName = "None";
    private string stepCss = "";

    private void Clear(MouseEventArgs e)
    {
        stepName = "None";
        stepCss = "";
    }

    private void DoVoid(MouseEventArgs e)
    {
        stepName = "Start DoVoid ...";
        stepCss = "text-danger";
        DoAsyncEvent();
    }

    private async void DoVoidAsync(MouseEventArgs e)
    {
        stepName = "Start DoVoidAsync ...";
        stepCss = "text-danger";
        await DoAsync();
    }

    private async Task DoTaskAsync(MouseEventArgs e)
    {
        stepName = "Start DoTaskAsync ...";
        stepCss = "text-danger";
        await DoAsync();
    }

    private async void DoAsyncEvent()
    {
        stepName = "Start Async Event ...";
        stepCss = "text-danger";
        await Task.Delay(500);
        stepName = "Async Event Complete";
        stepCss = "text-success";
    }

    private async Task DoAsync()
    {
        stepName = "Start Async ...";
        stepCss = "text-danger";
        await Task.Delay(500);
        stepName = "Async Complete";
        stepCss = "text-success";
    }
}
