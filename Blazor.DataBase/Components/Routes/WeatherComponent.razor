@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (this.ControllerService.Records == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in this.ControllerService.Records)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td class="text-right">
                    <button class="btn btn-secondary" @onclick="() => this.View(forecast.ID)">View</button>
                    <button class="btn btn-primary" @onclick="() => this.Edit(forecast.ID)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<UIContainer>

    <UIFormRow>
        <UIButtonColumn>
            <UIButton Show="true" CssColor="btn-success" ClickEvent="() => this.New()">Add New Record</UIButton>
        </UIButtonColumn>
    </UIFormRow>

</UIContainer>


@code {

    [Parameter] public EventCallback<int> EditRecord { get; set; }

    [Parameter] public EventCallback<int> ViewRecord { get; set; }

    [Parameter] public EventCallback<int> NewRecord { get; set; }

    [Inject] WeatherControllerService ControllerService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await this.ControllerService.GetRecordsAsync();
    }

    private void OnListChanged(object sender, EventArgs e)
    {
        this.InvokeAsync(this.StateHasChanged);
    }

    private void Edit(int id)
        => this.EditRecord.InvokeAsync(id);

    private void View(int id)
        => this.ViewRecord.InvokeAsync(id);


    private void New()
        => this.NewRecord.InvokeAsync();

}
