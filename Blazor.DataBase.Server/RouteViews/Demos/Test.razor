@page "/Test"

<div class="content px-sm-3 m-2">
    <h2>Async Version</h2>
    <select @onchange="OnChangeAsync">
        <option value="None">None</option>
        @foreach (var genre in genres)
        {
            <option value="@genre">@genre</option>
        }
    </select>
</div>

<div class="content px-sm-3 m-2">
    <h2>Void Version</h2>
    <select @onchange="OnChange">
        <option value="None">None</option>
        @foreach (var genre in genres)
        {
            <option value="@genre">@genre</option>
        }
    </select>
</div>

<input @onselect="OnSelect" value="Select some part of me" />
<div class="m-2">Selected: @SelectedGenre</div>

@code {

    private List<string> genres
        => new List<string>() { "Rock", "Folk", "Blues", "Pop" };

    private string SelectedGenre = string.Empty;

    private async Task OnChangeAsync(ChangeEventArgs e)
    {
        var selected = e.Value.ToString();
        SelectedGenre = "Getting it, wait!!!";
        await Task.Delay(2000);
        if (selected.Equals("None", StringComparison.CurrentCultureIgnoreCase))
            this.SelectedGenre = "Give it another Go!";
        else
            this.SelectedGenre = selected;
    }

    private async void OnChange(ChangeEventArgs e)
    {
        var selected = e.Value.ToString();
        SelectedGenre = "Getting it, wait!!!";
        await GetData(selected);
    }

    private async Task GetData(string selected)
    {
        await Task.Delay(2000);
        if (selected.Equals("None", StringComparison.CurrentCultureIgnoreCase))
            this.SelectedGenre = "Give it another Go!";
        else
            this.SelectedGenre = selected;
        await InvokeAsync(StateHasChanged);
    }

    private Task OnSelect(EventArgs e)
    {

        var y = e.ToString();
        var x = true;
        return Task.CompletedTask;
    }
}

